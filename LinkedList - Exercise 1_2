// Given two lists, concatenate the second list in reverse order to the end of the first list and return the concatenated list. Implement the logic inside concatenateLists() method.

import java.util.List;
import java.util.LinkedList;
import java.util.Iterator;

class Tester {
    
    public static List<Object> concatenateLists(List<Object> listOne, List<Object> listTwo) {
        Iterator<Object> descendingIterator = listTwo.descendingIterator();
        while (descendingIterator.hasNext()) {
            listOne.add(descendingIterator.next());
        }
        return listOne;
    }

    public static void main(String args[]) {
        List<Object> listOne = new LinkedList<Object>();
        listOne.add(50.5);
        listOne.add('X');
        listOne.add(125);
        listOne.add('A');
        
        List<Object> listTwo = new LinkedList<Object>();
        listTwo.add(150);
        listTwo.add(165);
        listTwo.add("Hello");
        listTwo.add(25.7);
        
        List<Object> concatenatedList = concatenateLists(listOne, listTwo);
        
        System.out.println("Concatenated linked list:");
        for (Object value : concatenatedList) {
            System.out.print(value + " ");
        }
    }
}
