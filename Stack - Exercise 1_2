// Given a stack of integers, find whether the top element of the stack is an even number or not. Return true if the top element is an even number, else return false. 
// Implement the logic inside checkTop() method of the Tester class.

class Stack {
    
    private int top; 
    private int maxSize; 
    private int[] arr;

    Stack(int maxSize) {
        this.top = -1; 
        this.maxSize = maxSize;
        arr = new int[maxSize];
    }

    public boolean isFull() {
        return top >= maxSize - 1;
    }

    public boolean push(int data) {
        if (isFull()) {
            return false;
        } else {
            arr[++top] = data;
            return true;
        }
    }

    public int peek() {
        if (isEmpty())
            return Integer.MIN_VALUE;
        else
            return arr[top];
    }

    public void display() {
        if (isEmpty())
            System.out.println("Stack is empty!");
        else {
            System.out.println("Displaying stack elements");
            for (int index = top; index >= 0; index--) {
                System.out.println(arr[index]); // accessing element at position index
            }
        }
    }

    public boolean isEmpty() {
        return top < 0;
    }

    public int pop() {
        if (isEmpty())
            return Integer.MIN_VALUE;
        else
            return arr[top--];
    }
}

class Tester {
      
    public static void main(String args[]) {
            
        Stack stack2 = new Stack(10);
        stack2.push(54);
        stack2.push(65);
        stack2.push(76);
        stack2.push(88);
        stack2.push(91);
            
        stack2.display();
            
        if (checkTop(stack2)) {
            System.out.println("The top most element of the stack is an even number");
        } else {
            System.out.println("The top most element of the stack is an odd number");
        }
    }

    public static boolean checkTop(Stack stack) {
        // Check if stack is empty first
        if (stack.isEmpty()) {
            System.out.println("Stack is empty!");
            return false;
        }
        
        // Get the top element
        int topElement = stack.peek();
        
        // Check if top element is even
        return topElement % 2 == 0;
    }
}
